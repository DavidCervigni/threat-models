name: Generate Reports

on:
  workflow_dispatch:
  push:
    branches:
    - master
    - main
    # paths:
    # - '**.yaml'   

permissions:
  contents: write
  pages: write
  id-token: write
  
env:
  BUILD_DIR: build
  YAML_PATH: "OAuth 2.0/OAuth2.0.yaml"
  TMID: OAuth2

jobs:
  tmvars:
    uses: ./.github/workflows/setup-threat-model.yml
    with:
      yaml-path: "OAuth 2.0/OAuth2.0.yaml"

    
  generate:
    runs-on: ubuntu-latest
    needs: tmvars
       
    steps:
      - uses: actions/checkout@v3
        with:
          path: ${{ github.event.repository.name }}
    

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the python version needed
       
      - name: Install python requirements
        working-directory: ${{ github.event.repository.name }}
        run: |
          pwd
          ls
          echo "${{ github.workspace }}"
          python -m pip install --upgrade pip
          pip install git+https://github.com/corda/threat-model-tool.git

      - name: Python MarkDown and HTML report generator
        working-directory: ${{ github.event.repository.name }}
        run: | 
          ls threatModels
          python -m r3threatmodeling.report_generator \
            --rootTMYaml ${{env.YAML_PATH}} \
            --TMID ${{env.TMID}} \
            --outputDir ${{env.BUILD_DIR}} \
            --template TM_templateFull \
            --assetDir threatModels/assets

      - uses: browser-actions/setup-chrome@v1
      - name: Generate PDF
        working-directory: ${{ github.event.repository.name }}/${{env.BUILD_DIR}}
        env:
          TM_TITLE: ${{needs.tmvars.outputs.title}}
          TM_VERSION: ${{needs.tmvars.outputs.version}}
          PDF_REPORT_FILENAME: ${{needs.tmvars.outputs.title}} Threat Model-${{needs.tmvars.outputs.version}}.pdf
          TIMEGEN: $(date +'%Y-%m-%d %H:%M')
          REPORT_HTML: ${{env.TMID}}.html
        run: |
          PDF_REPORT_FILENAME=${PDF_REPORT_FILENAME// /_}   # replace spaces with underscore
          TIMEGEN=`date '+%Y-%m-%d %H:%M'`                  # date of report generation
          
          npm i puppeteer
          cp ${{ github.workspace }}/threat-modeling/scripts/pdfScript.js .
          node pdfScript.js file://`pwd`/$REPORT_HTML $PDF_REPORT_FILENAME
          mv index.html index.html_0
          sed -e "s/__PDF_FILENAME__/${PDF_REPORT_FILENAME}/g" -e "s/__VERSION__/${TM_VERSION}/g" -e "s/__TIMEGEN__/${TIMEGEN}/g" index.html_0 > index.html && rm index.html_0  && \
          cat index.html && \
          rm -rf node_modules

      - name: Package
        uses: actions/upload-artifact@v3
        with:
          name: generated-reports
          path: |
            ${{ github.event.repository.name }}/${{env.BUILD_DIR}}/
            ${{ github.event.repository.name }}/dist/Threat_model.pdf

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload generated reports
        uses: actions/upload-pages-artifact@v1
        with:
          path: '${{ github.event.repository.name }}/${{env.BUILD_DIR}}/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
            
